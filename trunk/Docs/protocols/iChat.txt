Intranet Chat (IChat) и как с ним бороться
Многие домашние и корпоративные сети в качестве средства сетевого общения используют Intranet Chat (iChat) (http://vnalex.tripod.com). Этот чат, кроме огромного количества преимуществ, имеет ряд недостатков, и как наиболее важный из них - отсутствие модерации на сервере. Многие программисты пытались исправить данный недостаток путем разработки собственного сервера чата, но на первом этапе разработки сталкивались с такой проблемой как шифрование пакетов. В данной статье рассмотрен протокол работы iChat и описан алгоритм шифрования пакетов, приведены примеры с исходниками (на Delphi) "сниффера" и "бота" для iChat'a. Так же, статья может быть полезна и для "взлома" чата и прослушивания сообщений, но авторы данной статьи надеются на порядочность читателей ;). Итак, начнем! 

iChat имеет два режима работы - через выделенный сервер и через MailSlot'ы. Рассмотрим форматы сообщений для этих режимов. 

1. Работа через выделенный сервер

сообщение от клиента к серверу:

[Длина сообщения] [0x00] [Отправитель] [0x00] [CMD] [0x00] [Получатель | "*"] [0x00] [Сообщение]

[0x00] - разделительный байт (признак конца строки)
[Длина сообщения] - длина сообщения ASCII (учитывает поля, начиная с [Отправитель])
[Отправитель] - сигнатура отправителя (192.168.13.6/NETBIOS-NAME/login)
[CMD] - команда серверу, всегда "FORWARD"
[Получатель] - сигнатура получателя (аналогично как и отправитель), либо "*"
[Сообщение] - зашифрованное тело сообщения

от сервера клиенту:

[Длина сообщения] [0x00] [CMD] [0x00] [Сообщение]

[Длина сообщения] - длина сообщения ASCII (учитывает поля, начиная с [CMD])
[CMD] - команда клиенту, всегда "FORWARD"
[Сообщение] - зашифрованное тело сообщения

 


2. Работа через MailSlot'ы

Имя MailSlot'a: ichat047, формат аналогичен нижеприведенному.

Далее, перейдем в формату тела сообщения (после расшифровки)

[~] "ichat" [~~] [Счетчик ASCII] [~~] [Отправитель] [~~] [CMD] [~~] [параметры команды]

[Счетчик ASCII] - счетчик сообщений, начиная с 1, увеличивается на 1 с каждым сообщением
[Отправитель] - сигнатура отправителя (аналогично - см. выше)
[~~] - разделитель, два байта - 0x13 0x13
[CMD] - команда, см. ниже

Ниже приведены используемые iChat команды:

Имя линии для общего чата - iTCniaM

DISCONNECT - покинуть линию (или общий чат)
[Имя линии] [~]

CONNECT - войти в линию (общий чат)
[Имя линии] [~~] [Логин] [~~] [Ник] [~~] [~~] [Away_сообщение] [~~] 
[Получатель | "*"] [~~] [Версия] [~~] [Статус] [~]

CREATE_LINE - создание линии
[Имя линии] [~~] [Пароль] [~~] [Отправитель] [~]

REFRESH - обновить информацию в списке пользователей, посылается с периодичностью ок. 1 мин
[Имя линии | "*"] [~~] [Логин] [~~] [Ник] [~~] [~~] [Away_сообщение] [~~] [Получатель | "*"] [~~] [Версия] [~~] [Статус] [~]

STATUS_REQ - запрос статуса у конкретного чела
[~]

STATUS - выдать статус
[Статус] [~~] [Away_сообщение] [~]

BOARD - обновить сообщение в доске объявлений
[Номер куска] [~~] [Текст сообщения] [~]

TEXT - паблик сообщение
[Линия] [~~] [Текст] [~~] [Получатель | "*" | ""] [~]

ME - /me сообщение
[Линия] [~~] [Текст] [~~] [Получатель | "*"] [~]

TEXT - приватное сообщение, отправляет себе и получателю...
["gsMTCI"] [~~] [Текст] [~~] [Ник отправителя] [~]

RECIEVED - подтверждение о получении сообщения
["gsMTCI"] [~~] [Текст подтверждения] [~]

Теперь самое интересное - ШИФРОВАНИЕ ;) Чат использует алгоритм шифрования RC4 с паролем "tahci". Для тех, кому это мало что говорит, ниже приведена процедура кодирования/декодирования (алгоритм обратимый - то есть, для кодирования и декодирования используется одна процедура), реализующая этот алгоритм (на Delphi):
var str,str_dec:array[0..MAX_MSG_SIZE-1] of byte;
{str,str_dec - массивы в которых лежат сообщения (кодированное и декодированное соответсвенно)}

procedure DecodeMessage(leng:integer);
//leng - длина закодированного пакета
const s:string='tahci'; //ключ
var i,j,sw:byte;
    KeyLen,k:word;
    fs:array [0..255] of byte;
begin
 {$R-}
 KeyLen:=Length(s);
 j:=0;
 for i:=0 to 255 do fs[i]:=i;
 for i:=0 to 255 do
  begin
   j:=j+fs[i]+byte(s[(i mod KeyLen)+1]);
   sw:=fs[i];
   fs[i]:=fs[j];
   fs[j]:=sw;
  end;
 i:=0;
 j:=0;
 for k:=0 to (leng-1) do
  begin
   i:=i+1;
   j:=j+fs[i];
   sw:=fs[i];
   fs[i]:=fs[j];
   fs[j]:=sw;
   sw:=fs[i]+fs[j];
   str_dec[k]:=fs[sw] xor str[k];
  end;
end; 


И, в заключение статьи, выкладываем пару исходников - сниффер для чата (IChatI) и бот для чата (IChatBot). Обращаем Ваше внимание что сниффер может "слушать" как сообщения от сервера так и сообщения проходящие через MailSlot's, но бот умеет работать только через MailSlot'ы (инструкция по боту в файле readme.txt внутри архива). Представлены только исходные файлы на Delphi 7. Надеемся, что вам не составит труда их самостоятельно скомпилировать. Возможно, программы имеют некоторые "глюки", которые, мы надеемся, вы сможете исправить сами. Все вопросы просьба оставлять в форуме данного сайта.

 


С уважением, IChatCracker ;)
Просьба все вопросы задавать в форуме... Вот тут.

Copyrigth KIR OFF LAN.